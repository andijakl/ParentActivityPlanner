
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can read own data, can create profile if not existing, can update own profile
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null; // Allow creation if logged in
    }

    // Friends subcollection:
    match /users/{ownerId}/friends/{friendEntryId} {
       // Rule 1: The owner of the friends list can read, write, and delete entries in their own list.
       allow read, write, delete: if request.auth != null && request.auth.uid == ownerId;
       // Rule 2: Allow a user to add THEMSELVES to another user's (ownerId's) friend list.
       // This is crucial for the reciprocal part of accepting an invitation.
       // - `request.auth.uid` is the user performing the action (the one accepting the invite).
       // - `friendEntryId` is the document ID in the friends subcollection, which should be the UID of the user being added.
       // - `request.resource.data.uid` is the UID field within the data being written for the friend entry.
       // This rule allows UserB (request.auth.uid) to write their own data (where friendEntryId == UserB.uid
       // and request.resource.data.uid == UserB.uid) into UserA's (ownerId) friend list.
       allow create, update: if request.auth != null &&
                                request.auth.uid == friendEntryId &&
                                request.resource.data.uid == request.auth.uid;
    }

    // Activities: Logged-in users can read/create. Only creator can update/delete.
    // Participants can be updated by any logged-in user (for joining/leaving).
    match /activities/{activityId} {
      allow read, create: if request.auth != null;
      // Allow update only if it's the creator OR if only the participants field is changing
      allow update: if request.auth != null && (
                      resource.data.creatorId == request.auth.uid ||
                      request.resource.data.diff(resource.data).affectedKeys().hasOnly(['participants'])
                    );
      // Allow delete only by the creator
      allow delete: if request.auth != null && resource.data.creatorId == request.auth.uid;
    }

    // Invitations: Logged-in users can read/create/delete their own invites.
    // Anyone logged in can read an invite (to accept it).
    match /invitations/{inviteCode} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.inviterId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.inviterId == request.auth.uid;
    }
  }
}
